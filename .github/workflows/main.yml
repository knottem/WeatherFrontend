name: Publishing to Main branch

on:
  pull_request:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

permissions:
  contents: read
  packages: write

jobs:
  build-and-publish-main:
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ steps.meta.outputs.tags }}
    steps:
      - name: Check if PR is from 'dev' branch
        run: |
          if [[ "${{ github.event.pull_request.head.ref }}" != "dev" ]]; then
            echo "Error: You can only merge from the 'dev' branch into 'main'."
            exit 1
          fi

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate environment.ts
        run: |
          mkdir -p src/environments
          echo "export const environment = { apiUrl: '${{ secrets.API_URL }}', apiVersion: '0.0.0' };" > src/environments/environment.ts

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy-main:
    needs: build-and-publish-main
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run SSH commands
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd app/
            docker compose pull weatherfrontend
            docker compose up -d weatherfrontend
